# netdata python.d.plugin configuration for dns_query_time
#
# This file is in YaML format. Generally the format is:
#
# name: value
#
# There are 2 sections:
#  - global variables
#  - one or more JOBS
#
# JOBS allow you to collect values from multiple sources.
# Each source will have its own set of charts.
#
# JOB parameters have to be indented (using spaces only, example below).

# ----------------------------------------------------------------------
# Global Variables
# These variables set the defaults for all JOBs, however each JOB
# may define its own, overriding the defaults.

# update_every sets the default data collection frequency.
# If unset, the python.d.plugin default is used.
# update_every: 1

# priority controls the order of charts at the netdata dashboard.
# Lower numbers move the charts towards the top of the page.
# If unset, the default for python.d.plugin is used.
# priority: 60000

# retries sets the number of retries to be made in case of failures.
# If unset, the default for python.d.plugin is used.
# Attempts to restore the service are made once every update_every
# and only if the module has collected values in the past.
# retries: 5

# ----------------------------------------------------------------------
# JOBS (data collection sources)
#
# The default JOBS share the same *name*. JOBS with the same name
# are mutually exclusive. Only one of them will be allowed running at
# any time. This allows autodetection to try several alternatives and
# pick the one that works.
#
# Any number of jobs is supported.
#
# All python.d.plugin JOBS (for all its modules) support a set of
# predefined parameters. These are:
#
# job_name:
#     name: myname     # the JOB's name as it will appear at the
#                      # dashboard (by default is the job_name)
#                      # JOBs sharing a name are mutually exclusive
#     update_every: 1  # the JOB's data collection frequency
#     priority: 60000  # the JOB's order on the dashboard
#     retries: 5       # the JOB's number of restoration attempts
#
# Additionally to the above, dns_query_time also supports the following:
#
#     dns_servers: 'dns servers'       # list of dns servers to query
#     domains: 'domains'               # list of domains
#     aggregate: yes/no                # Default: yes. Aggregate all servers in one chart or not
#     response_timeout: 4              # Defalt: 4. Dns query response timeout (query = -100 if response time > response_time)
#
#
# ----------------------------------------------------------------------
# AUTO-DETECTION JOBS
# only one of them will run (they have the same name)
#
#
aggregate: no
dns_servers: '127.0.0.1'
domains: 'www.google.com www.twitter.com www.facebook.com www.python.org distrowatch.com linuxmint.com www.linux.com www.rsyslog.com www.archlinux.org www.cisco.com www.debian.org www.kernel.org gns3.com www.github.com www.youtube.com www.amazon.com www.kde.org netdata.firehol.org www.ubuntu.com www.redhat.com www.opensuse.org www.wireshark.org www.vmware.com www.microsoft.com www.elastic.co www.docker.com
