---

- name: read platform variables
  include_vars:
    file: "{{ ansible_os_family }}.yml"
  tags: [always]

# Install packages
- name: Install packages
  package:
    name: "{{item}}"
    state: present
  with_items: "{{_packages}}"

# freebsd-update upgrade -r 11.0-RELEASE-p11
#
# - name: Update ports index [FreeBSD]
#   command: portsnap auto; synth status
#   when: ansible_os_family == 'FreeBSD'

# synth install dns/dnsdist
# lang/ruby23

# ansible_os_family == [RedHat, Debian, Suse, Gentoo, Archlinux, Solaris, Alpine, FreeBSD, OpenBSD]

# fix
# fatal: [dns-resolver]: FAILED! =>
# {"changed": true, "exit_status": 1, "failed": true, "msg": "failed to validate",
# "stderr": "", "stderr_lines": [], "stdout": "The included directory /etc/dnsdist/config.d/ does not exist!\n
# Fatal error: Unable to convert parameter from no value to N5boost8optionalIbEE
# \n", "stdout_lines": ["The included directory /etc/dnsdist/config.d/ does not exist!",
# "Fatal error: Unable to convert parameter from no value to N5boost8optionalIbEE"]}

- name: create missing folder for dnsdist
  file:
    path: /etc/dnsdist/config.d/
    state: directory
  when: dnsdist
  tags: [dnsdist]
#
# - group:
#     name: pdns
#     state: present
#     when: ansible_os_family == 'Debian'

# - user:
#     name: pdns
#     state: present
#     comment: "pdns-recursor"
#     group: pdns
#     when: ansible_os_family == 'Debian'

# - group:
#     name: pdns-recursor
#     state: present
#     when: ansible_os_family == 'RedHat'

# - user:
#     name: pdns-recursor
#     state: present
#     comment: "pdns-recursor"
#     group: pdns-recursor
#     when: ansible_os_family == 'RedHat'
