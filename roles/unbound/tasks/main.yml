---
# https://github.com/jedisct1/dnscrypt-server-docker/blob/master/unbound.sh
- name: Install unbound
  package:
    name: unbound
    state: present

- name: Set cache_memory variable from shell command
  shell: "echo $(($(($((1024 * $((fgrep MemAvailable /proc/meminfo || fgrep MemTotal /proc/meminfo) | sed 's/[^0-9]//g' ))) - 12582912)) / 4))"
  args:
    executable: /bin/bash
  register: cache_memory
  check_mode: no

- name: Setup or update of the root trust anchor for DNSSEC validation
  command: unbound-anchor -a /var/lib/unbound/root.key
  register: unbound_anchor_result
  changed_when: "unbound_anchor_result.rc == 1"
  failed_when: false # ignore failure silently
  # Return value 1 = updated
  # Return value 0 = no update was necessary, updated with RFC5011tracking, or an error occurred

- stat:
    path: /etc/unbound/unbound_control.pem
  register: p

- name: Setup unbound-control
  when: not p.stat.exists
  command: unbound-control-setup
  notify: Restart unbound with cache

# https://www.internic.net/domain/named.cache
# Update root.hints every six months or so
- name: Get root-hints cache
  get_url:
    url: https://www.internic.net/domain/named.root
    dest: /etc/unbound/root.hints

- name: Set threads variable from shell command
  shell: "if [ $(nproc) -gt 1 ]; then echo $(($(nproc)-1)); else echo 1; fi"
  args:
    executable: /bin/bash
  register: threads
  check_mode: no

- name: Copy unbound configuration
  template:
    src: unbound.conf
    dest: /etc/unbound/unbound.conf
  notify: Restart unbound with cache

- name: Check unbound configuration
  command: unbound-checkconf
  check_mode: no

# SELinux
- name: Configure ports for SELinux (install policycoreutils-python)
  package:
    name: policycoreutils-python # for semanage
    state: present
  when: ansible_selinux

- name: Configure ports for SELinux (mark udp port for dns)
  command: semanage port -a -t dns_port_t -p udp {{dns_recursor_port}}
  failed_when: false # ignore failure silently
  when: ansible_selinux

- name: Configure ports for SELinux (mark tcp port for dns)
  command: semanage port -a -t dns_port_t -p tcp {{dns_recursor_port}}
  failed_when: false # ignore failure silently
  when: ansible_selinux

- name: Ensure unbound is running
  service:
    name: unbound
    state: started
    enabled: true
    pattern: unbound
