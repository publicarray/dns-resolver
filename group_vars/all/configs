---
ansible_python_interpreter: "/usr/bin/env python"
custom_packages:
  - htop

# [DEBIAN auto updates] https://github.com/jnv/ansible-role-unattended-upgrades
# unattended_mail: your@email.com # e-mail address to send information about upgrades or problems with unattended upgrades
unattended_origins_patterns: # https://github.com/jnv/ansible-role-unattended-upgrades#patterns-examples
  - 'origin=Ubuntu,archive=${distro_codename}-security'
  - 'o=Ubuntu,a=${distro_codename}-proposed-updates'
  - 'o=Ubuntu,a=${distro_codename}-updates'
  - 'o=Ubuntu,a=${distro_codename}'
unattended_install_on_shutdown: false
unattended_automatic_reboot: false
unattended_automatic_reboot_time: false
unattended_ignore_apps_require_restart: false
unattended_remove_unused_dependencies: false

# [REDHAT auto updates] https://github.com/jeffwidman/ansible-yum-cron
# email_to: your@email.com
emit_via: stdio
system_name: dns.seby.io
hourly_update_level: security
hourly_update_message: yes
hourly_download_updates: yes
hourly_apply_updates: yes
hourly_random_sleep: 15
daily_update_level: default
daily_update_message: yes
daily_download_updates: no
daily_apply_updates: no
daily_random_sleep: 180
yum_cron_clean_what: packages # keep metadata
yum_cron_clean_when: weekly
hourly_base_options:
  - "exclude=dnsdist*"
daily_base_options: "{{ hourly_base_options }}"

# [OpenNIC / nsd]
opennic: true
# nsd_chroot_enable: true
# nsd_chroot_dir: /opt/nsd
nsd_compile_flags: "--enable-root-server"
nsd_ip_addresses: ["127.0.0.1"]
nsd_reuseport: "yes"
nsd_port: 57
nsd_hide_version: "yes"
nsd_round_robin: "yes"
nsd_remote_control: "yes"
nsd_minimal_responses: "no"
nsd_do_ip6: "yes"

# [unbound] https://www.unbound.net/
# https://www.unbound.net/documentation/unbound.conf.html
# https://www.unbound.net/documentation/howto_optimise.html
# unbound_compile: true
unbound_compile: true
unbound_compile_version: 1.6.7
unbound_compile_sha256: 4e7bd43d827004c6d51bef73adf941798e4588bdb40de5e79d89034d69751c9f
# unbound_compile_config: "--enable-dnscrypt --enable-gost --enable-ed25519 --with-libevent --with-username={{unbound.server.username|default(unbound)}} --with-run-dir={{unbound.server.directory}} --with-conf-file={{unbound.server.directory}}/unbound.conf"
unbound_optimise: true
unbound_optimise_memory: 40
unbound_tls_domain: dns.seby.io
unbound_tls_cert_provider: acme-cf
unbound_tls_ca: https://acme-v01.api.letsencrypt.org/directory
unbound_tls_ca_terms: https://acme-v01.api.letsencrypt.org/terms
opennic_address: "{{nsd_ip_addresses|first}}@{{nsd_port}}"
unbound:
  server:
    ## logs
    verbosity: 0 # no verbosity, only errors
    use_syslog: yes
    log_time_ascii: yes
    val_log_level: 0 # log dnssec validation errors for investigating problems (domain, dns server ip and reason)
    # statistics_interval: 86400 # once a day print latency statistics
    pidfile: unbound.pid
    statistics_interval: 0 # for munin graphs
    extended_statistics: yes # for munin graphs
    statistics_cumulative: no # for munin graphs
    ## Server
    # interface: [127.0.0.1, '::1']
    interface: [127.0.0.1, '::1', 0.0.0.0@853, '::0@853']
    port: "56"
    ssl_service_key: "private.key"
    ssl_service_pem: "certificate.pem"
    ssl_port: 853
    root_hints: "root.hints"
    udp_upstream_without_downstream: yes
    access_control: [0.0.0.0/0 allow, '::/0 allow']
    # access_control: [0.0.0.0/0 deny, 127.0.0.1 allow]
    ## Privacy
    qname_minimisation: yes
    # use_caps_for_id: yes # some older servers don't handle this properly
    # caps-whitelist:

    # Don't send local queries out further, send NXDOMAIN instead, protect bad configured clients
    # valid TLDs https://www.iana.org/domains/root/db
    # popular undelegated TLDs hitting L-root http://stats.dns.icann.org/hedgehog/
    # ^ http://mm.icann.org/pipermail/gnso-newgtld-wg-wt4/2017-May/000070.html
    local_zone:
      - example. static # reserved
      # - invalid. static # reserved
      - local. static # reserved
      # - localhost. static # reserved
      # - onion. static # Tor Project
      # - test. static # reserved
      - i2p. static # I2P Anonymous Network
      # - glue. static # OpenNIC - disable if you support OpenNIC
      - home. static
      - zghjccbob3n0. static
      - dhcp. static
      - lan. static
      - localdomain. static
      - ip. static
      - internal. static
      - openstacklocal. static
      - dlink. static
      - gw==. static
      - gateway. static
      - corp. static
      - workgroup. static
      - belkin. static
      - davolink. static
      - z. static
      - domain. static
      - virtualmin. static
      - "2.dnscrypt-cert.{{ ansible_hostname }} refuse"
    ## Performance
    # so_reuseport: yes
    serve_expired: yes
    prefetch: yes
    prefetch_key: yes
    rrset_roundrobin: yes # possible load distribution for servers
    num_queries_per_thread: 2048
    outgoing_range: 4096 # (num-queries-per-thread * 2)
    outgoing_port_avoid: 5546 # fix unable to bind to port error (centOS)
    incoming_num_tcp: 200
    # Sydney, AU to New York, USA (http://nj-us-ping.vultr.com/) avg ping 224ms
    # Sydney, AU to Paris, FR (http://par-fr-ping.vultr.com) avg ping 309ms
    # Sydney, AU to Amsterdam, NL (http://ams-nl-ping.vultr.com) avg ping 318ms
    # Sydney, AU to London, EN (http://lon-gb-ping.vultr.com) avg ping 301ms
    jostle_timeout: 325 # single shot udp packet ttl in ms
    # so_rcvbuf: 4m
    # so_sndbuf: 4m
    neg_cache_size: 25m
    cache_min_ttl: 300 # 86400=1day 43200=12h 3600=1h 1800=30m 1200=20m 900=15m 600=10m 300=5m=standard, 0 (default)
    cache_max_ttl: 86400 # 14400=4h 86400=1day (default)
    # cache_max_negative_ttl: 3600 # 1h (default)
    # val-bogus-ttl: 120 # 60 (default)
    infra_host_ttl: 3600 # 1h, 900=15min (default) http://www.unbound.net/documentation/info_timeout.html
    infra_cache_numhosts: 50000
    ## Security
    hide_identity: yes
    hide_version: yes
    hide-trustanchor: yes
    minimal_responses: yes # reduce reflected DoS effects
    # harden_short_bufsize: yes
    # harden_large_queries: yes
    # harden_below_nxdomain: yes
    # harden_algo_downgrade: yes
    unwanted_reply_threshold: 10000000
    ## https://tools.ietf.org/html/rfc5735#section-3
    private_address:
      - 10.0.0.0/8 # private networks (RFC 1918)
      - 172.16.0.0/12
      - 192.168.0.0/16
      - 169.254.0.0/16 # link-local network (RFC 3927)
      - fd00::/8
      - fe80::/10
    do_not_query_localhost: no # allow to contact nsd on same host
    do_not_query_address:
      # - 127.0.0.0/8 # Loopback
      # - ::1
      - 10.0.0.0/8 # private networks (RFC 1918):
      - 172.16.0.0/12
      - 192.168.0.0/16
    # ip_ratelimit: 50
    # ratelimit-below-domain: example.com 3
    # ip_ratelimit_size: 4m
  remote_control:
    control_enable: true
    control_interface: 127.0.0.1

# [Generic DNScrypt]
dnscrypt_provider_name: '2.dnscrypt-cert.dns.seby.io'

# [dnscrypt-wrapper] https://github.com/cofyc/dnscrypt-wrapper
dnscrypt_wrapper: false

# [dnsdist] http://dnsdist.org/README/
# https://github.com/PowerDNS/dnsdist-ansible
dnsdist: true
# dnsdist_install_repo: "{{ dnsdist_powerdns_repo_10 }}"
# dnsdist_install_repo: "{{ dnsdist_powerdns_repo_11 }}"
dnsdist_install_repo: "{{ dnsdist_powerdns_repo_12 }}"
# dnsdist_install_repo: "{{ dnsdist_powerdns_repo_master }}"
dnsdist_locals: []
dnsdist_controlsocket: "127.0.0.1"
# dnsdist_setkey: "" # Change this
# dnsdist_acls: []
# dnsdist_servers: ['127.0.0.1:55']

dnsdist_config: |
  --[[
  # This file is managed by Ansible.
  #
  # template: /usr/local/etc/ansible/roles/PowerDNS.dnsdist/templates/dnsdist.conf.j2
  --]]

  --General settings
  setACL({'0.0.0.0/0', '::/0'}) --allow WWW
  controlSocket("127.0.0.1")
  setTCPRecvTimeout(4) --client timeout
  setTCPSendTimeout(4)
  setTCPUseSinglePipe(true)
  setStaleCacheEntriesTTL(86400) --86400sec = 24h
  setServerPolicy(firstAvailable) --options:firstAvailable,whashed,wrandom,roundrobin (Default leastOutstanding)
  setRingBuffersSize(250) --set the capacity of the ringbuffers used for live traffic inspection (default 10000)

  --Backend servers / Packet Cache
  pc = newPacketCache(10000, 86400, 0, 60, 60) --cache max 10000 queries
  newServer({address="127.0.0.1:{{unbound.server.port}}", name="unbound", weight=10})
  --newServer({address="9.9.9.9",  name="Quad9", qps=50, order=100}) --last resort/fallback if unbound is down https://www.quad9.net (blocklist)
  --newServer({address="9.9.9.10", name="Quad9", qps=50, order=100}) --last resort/fallback if unbound is down https://www.quad9.net
  --newServer({address="37.235.1.174", name="FreeDNS", qps=10, order=100}) --last resort/fallback if unbound is down
  --newServer({address="37.235.1.177", name="FreeDNS", qps=10, order=100}) --last resort/fallback if unbound is down
  --newServer({address="84.200.69.80", name="DNS.Watch", qps=20, pool="abuse"})
  --newServer({address="84.200.70.40", name="DNS.Watch", qps=20, pool="abuse"})
  --newServer({address="208.67.220.220", name="OpenDNS", qps=50, pool="abuse"})
  --newServer({address="208.67.222.222", name="OpenDNS", qps=50, pool="abuse"})
  getPool(""):setCache(pc)
  -- getPool("abuse"):setCache(pc)

  -- Simple abuse protection
  setDynBlocksAction(DNSAction.Refused) -- DNSAction.Refused/DNSAction.Drop
  -- https://www.iana.org/assignments/dns-parameters/dns-parameters.xhtml
  addAction(NotRule(QClassRule(1)), DropAction()) -- drop classes that are not for the internet
  addAction(OpcodeRule(5), DropAction()) -- drop update queries
  addAction(AndRule({QTypeRule(255), TCPRule(false)}), TCAction()) --force ANY queries over tcp (prevent spoofed queries)
  addAction(AndRule({MaxQPSIPRule(50), TCPRule(false)}), TCAction()) --ask for tcp when traffic is greater than 50 qps per ip
  --addDelay(MaxQPSIPRule(50, 32, 48), 100) --add 50ms delay to IPs with greater than 50qps (queries per second)
  --addAction(MaxQPSIPRule(50), NoRecurseAction()) --strips the Recursion Desired (RD) bit from traffic greater than 50 qps per ip

  includeDirectory("/etc/dnsdist/config.d/")

  local last = 0
  serial = 0
  function maintenance()
    addDynBlocks(exceedQRate(80, 10), "Exceeded query rate", 600) --block IPs greater than 80qps over 10 sec for 10 min
    addDynBlocks(exceedRespByterate(20000, 10), "Exceeded byte rate", 600) --block IPs that request more than 20 kilobytes/s over 10sec for 10 min

    autoRenewCert() -- DNSCrypt
  end

  -- Statistics
  -- webserver("127.0.0.1:8083", "mysuperpass")
  -- carbonServer("37.252.122.50", "dns.seby")
  -- https://metronome1.powerdns.com/?server=dnsdist.dns.seby
  -- https://metrics.powerdns.com/?server=dnsdist.dns.seby

  -- these domains have high error rate or the DNS responses time-out
  addAction("tracker.publicbt.com", RCodeAction(3)) -- No Response http://dnsviz.net/d/tracker.publicbt.com/dnssec/ http://dnscheck.pingdom.com/?domain=publicbt.com
  addAction("tracker.flashtorrents.org", RCodeAction(2)) -- Name Server is down http://dnscheck.pingdom.com/?domain=flashtorrents.org

# [netdata]
netdata: false

# /etc/netdata/netdata.conf
# /etc/netdata/health_alarm_notify.conf
