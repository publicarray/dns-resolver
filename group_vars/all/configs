---
custom_packages:
  - htop

# [DEBIAN auto updates] https://github.com/jnv/ansible-role-unattended-upgrades
# unattended_mail: your@email.com # e-mail address to send information about upgrades or problems with unattended upgrades
unattended_origins_patterns: # https://github.com/jnv/ansible-role-unattended-upgrades#patterns-examples
  - 'origin=Ubuntu,archive=${distro_codename}-security'
  - 'o=Ubuntu,a=${distro_codename}-proposed-updates'
  - 'o=Ubuntu,a=${distro_codename}-updates'
  - 'o=Ubuntu,a=${distro_codename}'
unattended_install_on_shutdown: false
unattended_automatic_reboot: false
unattended_automatic_reboot_time: false
unattended_ignore_apps_require_restart: false
unattended_remove_unused_dependencies: false

# [REDHAT auto updates] https://github.com/jeffwidman/ansible-yum-cron
# email_to: your@email.com
hourly_update_level: security
hourly_update_message: yes
hourly_download_updates: yes
hourly_apply_updates: yes
hourly_random_sleep: 15
daily_update_level: default
daily_update_message: yes
daily_download_updates: yes
daily_apply_updates: yes
daily_random_sleep: 180
yum_cron_clean_what: packages # keep metadata
yum_cron_clean_when: weekly

# [OpenNIC / nsd]
opennic: true
# nsd_chroot_enable: true
# nsd_chroot_dir: /opt/nsd
nsd_flags: "--enable-root-server"
nsd_ip_addresses: ["127.0.0.1"]
nsd_reuseport: "yes"
nsd_port: 57
nsd_hide_version: "yes"
nsd_round_robin: "yes"
nsd_remote_control: "yes"
nsd_minimal_responses: "no"

# [DNS]
dns_recursor: 'unbound' # [pdns_recursor|unbound]
dns_recursor_port: '56'
# for SELinux remember to do:
#semanage port -a -t dns_port_t -p udp 56
#semanage port -a -t dns_port_t -p tcp 56

# [unbound]
# see roles/unbound/template/unbound.config file for configs

# [pdns_recursor] https://doc.powerdns.com/md/recursor/settings/
# pdns_rec_install_repo: "{{ pdns_rec_powerdns_repo_40 }}"
pdns_rec_install_repo: "{{ pdns_rec_powerdns_repo_master }}"
pdns_rec_config:
  allow-from: # If set, only allow these comma separated netmasks to recurse
    - '0.0.0.0/0'
    - '::/0'
  local-address: '127.0.0.1,::1' # local-address IP addresses to listen on, separated by spaces or commas. Also accepts ports.
  local-port: '{{dns_recursor_port}}' # port to listen on
  any-to-tcp: 'yes' # Answer ANY queries with tc=1, shunting to TCP
  client-tcp-timeout: '2' # Timeout in seconds when talking to TCP clients
  daemon: 'yes' # Operate as a daemon
  dnssec: 'validate' # https://doc.powerdns.com/md/recursor/dnssec/
  disable-packetcache: 'no' # Disable packetcache
  entropy-source: '/dev/urandom'
  etc-hosts-file: '/dev/null'
  export-etc-hosts: 'no' # If we should serve up contents from /etc/hosts
  forward-zones: 'dns.opennic.glue=127.0.0.1:{{nsd_port}}, geek=127.0.0.1:{{nsd_port}}, opennic.glue=127.0.0.1:{{nsd_port}}, pirate=127.0.0.1:{{nsd_port}}'
  # "dns.opennic.glue.", "bbs.", "bit.", "chan.", "dyn.", "free.", "fur.", "geek.", "gopher.", "indy.", "libre.", "neo.", "null.", "o.", "opennic.glue.", "oss.", "oz.", "parody.", "pirate."}, "opennic")
  hint-file: '/etc/unbound/root.hints' # If set, load root hints from this file
  log-common-errors: 'no' # If we should log rather common errors
  logging-facility: '0' # Facility to log messages as. 0 corresponds to local0
  loglevel: '3' # Amount of logging. Higher is more. Do not set below 3
  lowercase-outgoing: 'no' # Force outgoing questions to lowercase
  max-cache-entries: '1000000' # If set, maximum number of entries in the main cache
  max-cache-ttl: '86400' # (1 day) maximum number of seconds to keep a cached entry in memory
  max-mthreads: '2048' #  Maximum number of simultaneous Mtasker threads
  max-negative-ttl: '3600' # (1 hour) maximum number of seconds to keep a negative cached entry in memory
  max-packetcache-entries: '500000' # maximum number of entries to keep in the packetcache
  max-qperq: '50' #  Maximum outgoing queries per query
  max-tcp-clients: '1024' # Maximum number of simultaneous TCP clients
  max-tcp-per-client: '128' # If set, maximum number of TCP sessions per client (IP address)
  max-total-msec: '15000' # (15 sec) Maximum total wall-clock time per query in milliseconds, 0 for unlimited <https://www.nlnetlabs.nl/downloads/publications/os3-2015-rp2-hamza-boulakhrif.pdf?
  minimum-ttl-override: '300' # (5 min) Set under adverse conditions, a minimum TTL
  network-timeout: '1500' # (1.5 sec) Wait this number of milliseconds for network i/o
  no-shuffle: 'no'
  packetcache-servfail-ttl: '60' # maximum number of seconds to keep a cached servfail entry in packetcache
  packetcache-ttl: '3600' # maximum number of seconds to keep a cached entry in packetcache
  query-local-address: '0.0.0.0' # Source IP address for sending queries
  query-local-address6: '::' # Source IPv6 address for sending queries. IF UNSET, IPv6 WILL NOT BE USED FOR OUTGOING QUERIES
  quiet: 'yes' # Suppress logging of questions and answers
  # security-poll-suffix: '' # Domain name from which to query security update notifications
  serve-rfc1918: 'yes' # If we should be authoritative for RFC 1918 private IP space
  server-down-max-fails: '64' # Maximum number of consecutive timeouts (and unreachables) to mark a server as down ( 0 => disabled )
  server-down-throttle-time: '60' #  Number of seconds to throttle all queries to a server after being marked as down
  # server-id: '' # Returned when queried for 'server.id' TXT or NSID, defaults to hostname
  # single-socket: 'off' # If set, only use a single socket for outgoing queries
  spoof-nearmiss-max: '20' # If non-zero, assume spoofing after this many near misses
  # stats-ringbuffer-entries: '10000' # maximum number of packets to store statistics for
  threads: '2' # Launch this number of threads
  trace: 'off' # if we should output heaps of logging. set to 'fail' to only log failing domains
  version-string: '' # string reported on version.pdns or version.bind
  reuseport: 'yes'

# [Generic DNScrypt]
dnscrypt_provider_name: '2.dnscrypt-cert.dns.seby.io'

# [dnscrypt-wrapper] https://github.com/cofyc/dnscrypt-wrapper
dnscrypt_wrapper: false

# [dnsdist] http://dnsdist.org/README/
# https://github.com/PowerDNS/dnsdist-ansible
dnsdist: true
# dnsdist_install_repo: "{{ dnsdist_powerdns_repo_10 }}"
dnsdist_install_repo: "{{ dnsdist_powerdns_repo_11 }}"
# dnsdist_install_repo: "{{ dnsdist_powerdns_repo_master }}"
dnsdist_locals: []
dnsdist_controlsocket: "127.0.0.1"
# dnsdist_setkey: "" # Change this
# dnsdist_acls: []
# dnsdist_servers: ['127.0.0.1:55']

dnsdist_config: |
  --[[
  # This file is managed by Ansible.
  #
  # template: /usr/local/etc/ansible/roles/PowerDNS.dnsdist/templates/dnsdist.conf.j2
  --]]

  --General settings
  setACL({'0.0.0.0/0', '::/0'}) --allow WWW
  controlSocket("127.0.0.1")
  setTCPRecvTimeout(3) --client timeout 3 sec
  setStaleCacheEntriesTTL(86400) --86400sec = 24h
  setServerPolicy(firstAvailable) --options:firstAvailable,whashed,wrandom,roundrobin,leastOutstanding

  --Backend servers / Packet Cache
  pc = newPacketCache(10000, 86400, 0, 60, 60) --cache max 10000 queries
  newServer({address="127.0.0.1:{{dns_recursor_port}}", name="{{dns_recursor}}", order=1, tcpFastOpen=true})
  --[[
  newServer({address="208.67.222.222", name="OpenDNS", order=100}) --last resort/fallback
  newServer({address="208.67.220.220", name="OpenDNS", order=100}) --last resort/fallback
  --]]
  getPool(""):setCache(pc)

  -- Simple abuse protection
  setDynBlocksAction(DNSAction.Refused) -- DNSAction.Refused/DNSAction.Drop
  addAction(OrRule{OpcodeRule(5), NotRule(QClassRule(1))}, DropAction()) -- drop update queries and classes that are not for the internet
  -- addAnyTCRule() --force ANY queries over tcp (prevent spoofed queries)
  addDelay(MaxQPSIPRule(10, 32, 48), 200) --add 200ms delay to IPs with grater than 10qps (queries per second)

  includeDirectory("/etc/dnsdist/config.d/")

  function maintenance()
    addDynBlocks(exceedQRate(20, 10), "Exceeded query rate", 300) --block IPs grater than 20qps in 10 sec for 5 min
    addDynBlocks(exceedRespByterate(3000, 10), "Exceeded byte rate", 300) --block IPs that request more than 3000 bytes/s in 10sec for 5 min
    -- renew()
  end

  -- Statistics
  -- webserver("127.0.0.1:8083", "mysuperpass")
  -- carbonServer("37.252.122.50")
  -- https://metronome1.powerdns.com/?server=dnsdist.dns.seby

  -- DNS over TCP
  --addLocal("127.0.0.1:53", { doTCP=true, reusePort=false, tcpFastOpenSize=256, interface=lo })
  addLocal("127.0.0.1:53", true, false, 256)
# [netdata]
netdata: true

# /etc/netdata/netdata.conf
# /etc/netdata/health_alarm_notify.conf

# [DNS over TCP]
dns_over_tcp: true
dns_over_tcp_bind_ip: 0.0.0.0
dns_over_tcp_port: 853
dns_over_tcp_cert:
  - domains: [ "{{ansible_nodename}}", "www.{{ansible_nodename}}" ]
  - provider: 'cloudflare'
  - email: ''
  - apikey: ''

# [haproxy]
haproxy_global:
  log:
    - address: 127.0.0.1
      facility: user
      level: warning
  ssl-default-bind-options: force-tlsv12
  ssl-default-bind-ciphers: ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384
  tune:
    ssl:
      default-dh-param: 2048

haproxy_defaults:
  mode: tcp

haproxy_listen:
  - name: dns-over-tcp
    bind: 0.0.0.0:853
    log: global
    # option: tcplog
    ssl:
      cert: /etc/haproxy/dns.seby.io/certkey.pem
    servers:
      - name: dns-server
        ip: 127.0.0.1
        port: 53
        maxconn: 5000
