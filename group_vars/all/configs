---
ansible_python_interpreter: "/usr/bin/env python"
custom_packages:
  - htop

# [DEBIAN auto updates] https://github.com/jnv/ansible-role-unattended-upgrades
# unattended_mail: your@email.com # e-mail address to send information about upgrades or problems with unattended upgrades
unattended_origins_patterns: # https://github.com/jnv/ansible-role-unattended-upgrades#patterns-examples
  - 'origin=Ubuntu,archive=${distro_codename}-security'
  - 'o=Ubuntu,a=${distro_codename}-proposed-updates'
  - 'o=Ubuntu,a=${distro_codename}-updates'
  - 'o=Ubuntu,a=${distro_codename}'
unattended_install_on_shutdown: false
unattended_automatic_reboot: false
unattended_automatic_reboot_time: false
unattended_ignore_apps_require_restart: false
unattended_remove_unused_dependencies: false

# [REDHAT auto updates] https://github.com/jeffwidman/ansible-yum-cron
# email_to: your@email.com
hourly_update_level: security
hourly_update_message: yes
hourly_download_updates: yes
hourly_apply_updates: yes
hourly_random_sleep: 15
daily_update_level: default
daily_update_message: yes
daily_download_updates: yes
daily_apply_updates: yes
daily_random_sleep: 180
yum_cron_clean_what: packages # keep metadata
yum_cron_clean_when: weekly

# [OpenNIC / nsd]
opennic: true
# nsd_chroot_enable: true
# nsd_chroot_dir: /opt/nsd
nsd_flags: "--enable-root-server"
nsd_ip_addresses: ["127.0.0.1"]
nsd_reuseport: "yes"
nsd_port: 57
nsd_hide_version: "yes"
nsd_round_robin: "yes"
nsd_remote_control: "yes"
nsd_minimal_responses: "no"

# [DNS]
dns_recursor: 'unbound' # [pdns_recursor|unbound]
dns_recursor_port: '56'

# [unbound] https://www.unbound.net/
# https://www.unbound.net/documentation/unbound.conf.html
# https://www.unbound.net/documentation/howto_optimise.html
unbound_server:
  # so-reuseport: yes
  # qname-minimisation: yes
  # use-caps-for-id: yes
  # caps-whitelist:
  # serve-expired: yes
  # ip-ratelimit: 100
  # ip-ratelimit-size: 4m
  verbosity: 0 # only errors
  port: "{{dns_recursor_port}}"
  statistics_interval: 86400 # once a day print latency statistics
  interface: [127.0.0.1, '::1']
  num_queries_per_thread: 4096
  jostle_timeout: 300
  outgoing_range: 8192 # (num-queries-per-thread * 2)
  outgoing_port_avoid: 5546 # fix unable to bind to port error (centOS)
  so_rcvbuf: 4m
  so_sndbuf: 4m
  neg_cache_size: 25m
  cache_min_ttl: 600 # 86400=1day 43200=12h 3600=1h 1800=30m 1200=20m 900=15m 600=10m 300=5m=standard, 0 (default)
  cache_max_ttl: 86400 # 14400=4h 86400=1day (default)
  # cache_max_negative_ttl: 3600 # 1h (default)
  infra_host_ttl: 3600 # 1h, 900=15min (default)
  infra_cache_numhosts: 50000
  access_control: [0.0.0.0/0 deny, 127.0.0.1 allow]
  chroot: ""
  directory: "/etc/unbound"
  use_syslog: yes
  log_time_ascii: yes
  # root_hints: "/etc/unbound/root.hints"
  hide_identity: yes
  hide_version: yes
  harden_short_bufsize: yes
  harden_large_queries: yes
  harden_below_nxdomain: yes
  ## https://tools.ietf.org/html/rfc5735#section-3
  private_address:
    - 10.0.0.0/8 # private networks (RFC 1918)
    - 172.16.0.0/12
    - 192.168.0.0/16
    - 169.254.0.0/16 # link-local network (RFC 3927)
    - fd00::/8
    - fe80::/10
  unwanted_reply_threshold: 10000000
  do_not_query_localhost: no # allow to contact nsd on same host
  do_not_query_address:
    # - 127.0.0.0/8 # Loopback
    # - ::1
    - 10.0.0.0/8 # private networks (RFC 1918):
    - 172.16.0.0/12
    - 192.168.0.0/16
  prefetch: yes
  prefetch_key: yes
  rrset_roundrobin: yes
  minimal_responses: yes
  # auto_trust_anchor_file: "/usr/local/etc/unbound/root.key"
  val_log_level: 2 # log dnssec validation errors for investigating problems (domain, dns server ip and reason)
  local_zone:
    - belkin. static
    - corp. static
    - domain. static
    - example. static
    - home. static
    - invalid. static
    - lan. static
    - local. static
    - localdomain. static
    - internal. static
    - virtualmin. static
    - test. static
    - "2.dnscrypt-cert.{{ ansible_hostname }} refuse"
# unbound_tls:
#   private_key: /etc/haproxy/dns.seby.io/privkey.pem
#   cert: /etc/haproxy/dns.seby.io/cert.pem
#   port: 854
  # port: 853 # default

# [pdns_recursor] https://doc.powerdns.com/md/recursor/settings/
# pdns_rec_install_repo: "{{ pdns_rec_powerdns_repo_40 }}"
pdns_rec_install_repo: "{{ pdns_rec_powerdns_repo_master }}"
pdns_rec_config:
  allow-from: # If set, only allow these comma separated netmasks to recurse
    - '0.0.0.0/0'
    - '::/0'
  local-address: '127.0.0.1,::1' # local-address IP addresses to listen on, separated by spaces or commas. Also accepts ports.
  local-port: '{{dns_recursor_port}}' # port to listen on
  any-to-tcp: 'yes' # Answer ANY queries with tc=1, shunting to TCP
  client-tcp-timeout: '4' # Timeout in seconds when talking to TCP clients
  daemon: 'yes' # Operate as a daemon
  dnssec: 'validate' # https://doc.powerdns.com/md/recursor/dnssec/
  disable-packetcache: 'no' # Disable packetcache
  entropy-source: '/dev/urandom'
  etc-hosts-file: '/dev/null'
  export-etc-hosts: 'no' # If we should serve up contents from /etc/hosts
  forward-zones: 'dns.opennic.glue=127.0.0.1:{{nsd_port}}, geek=127.0.0.1:{{nsd_port}}, opennic.glue=127.0.0.1:{{nsd_port}}, pirate=127.0.0.1:{{nsd_port}}'
  # "dns.opennic.glue.", "bbs.", "bit.", "chan.", "dyn.", "free.", "fur.", "geek.", "gopher.", "indy.", "libre.", "neo.", "null.", "o.", "opennic.glue.", "oss.", "oz.", "parody.", "pirate."}, "opennic")
  hint-file: '/var/dns-recursor/root.hints' # If set, load root hints from this file
  log-common-errors: 'no' # If we should log rather common errors
  logging-facility: '0' # Facility to log messages as. 0 corresponds to local0
  loglevel: '3' # Amount of logging. Higher is more. Do not set below 3
  lowercase-outgoing: 'no' # Force outgoing questions to lowercase
  max-cache-entries: '1000000' # If set, maximum number of entries in the main cache
  max-cache-ttl: '86400' # (1 day) maximum number of seconds to keep a cached entry in memory
  max-mthreads: '2048' #  Maximum number of simultaneous Mtasker threads
  max-negative-ttl: '3600' # (1 hour) maximum number of seconds to keep a negative cached entry in memory
  max-packetcache-entries: '500000' # maximum number of entries to keep in the packetcache
  max-qperq: '50' #  Maximum outgoing queries per query
  max-tcp-clients: '1024' # Maximum number of simultaneous TCP clients
  max-tcp-per-client: '128' # If set, maximum number of TCP sessions per client (IP address)
  max-total-msec: '15000' # (15 sec) Maximum total wall-clock time per query in milliseconds, 0 for unlimited <https://www.nlnetlabs.nl/downloads/publications/os3-2015-rp2-hamza-boulakhrif.pdf?
  minimum-ttl-override: '300' # (5 min) Set under adverse conditions, a minimum TTL
  network-timeout: '1500' # (1.5 sec) Wait this number of milliseconds for network i/o
  no-shuffle: 'no'
  packetcache-servfail-ttl: '60' # maximum number of seconds to keep a cached servfail entry in packetcache
  packetcache-ttl: '3600' # maximum number of seconds to keep a cached entry in packetcache
  query-local-address: '0.0.0.0' # Source IP address for sending queries
  query-local-address6: '::' # Source IPv6 address for sending queries. IF UNSET, IPv6 WILL NOT BE USED FOR OUTGOING QUERIES
  quiet: 'yes' # Suppress logging of questions and answers
  # security-poll-suffix: '' # Domain name from which to query security update notifications
  serve-rfc1918: 'yes' # If we should be authoritative for RFC 1918 private IP space
  server-down-max-fails: '64' # Maximum number of consecutive timeouts (and unreachables) to mark a server as down ( 0 => disabled )
  server-down-throttle-time: '60' #  Number of seconds to throttle all queries to a server after being marked as down
  # server-id: '' # Returned when queried for 'server.id' TXT or NSID, defaults to hostname
  # single-socket: 'off' # If set, only use a single socket for outgoing queries
  spoof-nearmiss-max: '20' # If non-zero, assume spoofing after this many near misses
  # stats-ringbuffer-entries: '10000' # maximum number of packets to store statistics for
  threads: '1' # Launch this number of threads
  trace: 'off' # if we should output heaps of logging. set to 'fail' to only log failing domains
  version-string: '' # string reported on version.pdns or version.bind
  reuseport: 'yes'

# [Generic DNScrypt]
dnscrypt_provider_name: '2.dnscrypt-cert.dns.seby.io'

# [dnscrypt-wrapper] https://github.com/cofyc/dnscrypt-wrapper
dnscrypt_wrapper: false

# [dnsdist] http://dnsdist.org/README/
# https://github.com/PowerDNS/dnsdist-ansible
dnsdist: true
# dnsdist_install_repo: "{{ dnsdist_powerdns_repo_10 }}"
# dnsdist_install_repo: "{{ dnsdist_powerdns_repo_11 }}"
dnsdist_install_repo: "{{ dnsdist_powerdns_repo_master }}"
dnsdist_locals: []
dnsdist_controlsocket: "127.0.0.1"
# dnsdist_setkey: "" # Change this
# dnsdist_acls: []
# dnsdist_servers: ['127.0.0.1:55']

dnsdist_config: |
  --[[
  # This file is managed by Ansible.
  #
  # template: /usr/local/etc/ansible/roles/PowerDNS.dnsdist/templates/dnsdist.conf.j2
  --]]

  --General settings
  setACL({'0.0.0.0/0', '::/0'}) --allow WWW
  controlSocket("127.0.0.1")
  setTCPRecvTimeout(4) --client timeout
  setTCPSendTimeout(4)
  setTCPUseSinglePipe(true) --v.Master
  setStaleCacheEntriesTTL(86400) --86400sec = 24h
  setServerPolicy(firstAvailable) --options:firstAvailable,whashed,wrandom,roundrobin (Default leastOutstanding)
  setRingBuffersSize(250) --set the capacity of the ringbuffers used for live traffic inspection (default 10000) --v.Master

  --Backend servers / Packet Cache
  pc = newPacketCache(10000, 86400, 0, 60, 60) --cache max 10000 queries
  newServer({address="127.0.0.1:{{dns_recursor_port}}", name="{{dns_recursor}}", weight=10})
  --newServer({address="37.235.1.174", name="FreeDNS", qps=5, order=100}) --last resort/fallback if unbound is down
  --newServer({address="37.235.1.177", name="FreeDNS", qps=5, order=100}) --last resort/fallback if unbound is down
  -- -for abusve clients using complex queries (e.g. many T.O. in in-addr.arpa). Coursing delays for other users and timeouts
  --newServer({address="84.200.69.80", name="DNS.Watch", qps=10, pool="abuse"})
  --newServer({address="84.200.70.40", name="DNS.Watch", qps=10, pool="abuse"})
  --newServer({address="208.67.220.220", name="OpenDNS", qps=20, pool="abuse"})
  --newServer({address="208.67.222.222", name="OpenDNS", qps=20, pool="abuse"})
  getPool(""):setCache(pc)
  getPool("abuse"):setCache(pc)

  -- Simple abuse protection
  setDynBlocksAction(DNSAction.Refused) -- DNSAction.Refused/DNSAction.Drop
  -- https://www.iana.org/assignments/dns-parameters/dns-parameters.xhtml
  addAction(NotRule(QClassRule(1)), DropAction()) -- drop classes that are not for the internet
  addAction(OpcodeRule(5), DropAction()) -- drop update queries
  addAction(AndRule({QTypeRule(255), TCPRule(false)}), TCAction()) --force ANY queries over tcp (prevent spoofed queries)
  addAction(AndRule({MaxQPSIPRule(50), TCPRule(false)}), TCAction()) --ask for tcp when traffic is greater than 50 qps per ip
  --addDelay(MaxQPSIPRule(50, 32, 48), 100) --add 50ms delay to IPs with greater than 50qps (queries per second)
  --addAction(MaxQPSIPRule(50), NoRecurseAction()) --strips the Recursion Desired (RD) bit from traffic greater than 30 qps per ip

  includeDirectory("/etc/dnsdist/config.d/")

  local last = 0
  serial = 0
  function maintenance()
    addDynBlocks(exceedQRate(80, 10), "Exceeded query rate", 600) --block IPs greater than 80qps over 10 sec for 10 min
    addDynBlocks(exceedRespByterate(20000, 10), "Exceeded byte rate", 600) --block IPs that request more than 20 kilobytes/s over 10sec for 10 min

    autoRenewCert() -- DNSCrypt
  end

  -- Statistics
  -- webserver("127.0.0.1:8083", "mysuperpass")
  carbonServer("37.252.122.50")
  -- https://metronome1.powerdns.com/?server=dnsdist.dns.seby
  -- https://metrics.powerdns.com/?server=dnsdist.dns.seby

  -- these domains have high error rate or the DNS responses time-out
  addAction("tracker.publicbt.com", RCodeAction(3)) -- No Response http://dnsviz.net/d/tracker.publicbt.com/dnssec/ http://dnscheck.pingdom.com/?domain=publicbt.com
  addAction("tracker.flashtorrents.org", RCodeAction(2)) -- Name Server is down http://dnscheck.pingdom.com/?domain=flashtorrents.org
  addAction("tracker.zer0day.to", RCodeAction(2)) -- invalid DNSSEC / broken delegation http://dnscheck.pingdom.com/?domain=zer0day.to http://dnscheck.pingdom.com/?domain=tracker.zer0day.to
  -- addAction("tracker.zer0day.to", SpoofAction("87.98.148.74"))

  -- DNS over TCP
  --addLocal("127.0.0.1:53", { doTCP=true, interface=lo }) -- v.master
  --addLocal("127.0.0.1:53", true, false, 0) -- v.11
# [netdata]
netdata: false

# /etc/netdata/netdata.conf
# /etc/netdata/health_alarm_notify.conf

# [DNS over TCP]
dns_over_tcp: true
dns_over_tcp_bind_ip: 0.0.0.0
dns_over_tcp_port: 853
dns_over_tcp_cert:
  - domains: [ "{{ansible_nodename}}", "www.{{ansible_nodename}}" ]
  - provider: 'cloudflare'
  - email: ''
  - apikey: ''

# [haproxy]
haproxy_global:
# netdata
# stats socket /var/run/haproxy.sock mode 660 level operator group netdata
# stats timeout 2m #Wait up to 2 minutes for input

  log:
    - address: 127.0.0.1
      facility: user
      level: warning
  ssl-default-bind-options: force-tlsv12
  ssl-default-bind-ciphers: ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384
  tune:
    ssl:
      default-dh-param: 2048

haproxy_defaults:
  mode: tcp
    # log global
    # mode tcp
    # balance roundrobin
    # timeout http-request 10s
    # timeout queue 1m
    # timeout connect 10s
    # timeout client 1m
    # timeout server 1m
    # timeout http-keep-alive 1m
    # timeout check 1m

haproxy_listen:
  - name: dns-over-tcp
    bind: 0.0.0.0:853
    log: global
    # option: tcplog
    ssl:
      cert: /etc/haproxy/dns.seby.io/certkey.pem
    servers:
      - name: dns-server
        ip: 127.0.0.1
        port: 53
        maxconn: 5000
